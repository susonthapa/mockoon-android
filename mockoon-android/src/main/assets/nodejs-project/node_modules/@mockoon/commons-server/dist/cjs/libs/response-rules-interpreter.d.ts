import { RouteResponse } from '@mockoon/commons';
import { Request } from 'express';
/**
 * Interpretor for the route response rules.
 * Extract the rules targets from the request (body, headers, etc).
 * Get the first route response for which at least one rule is fulfilled.
 */
export declare class ResponseRulesInterpreter {
    private routeResponses;
    private request;
    private randomResponse;
    private sequentialResponse;
    private targets;
    constructor(routeResponses: RouteResponse[], request: Request, randomResponse: boolean, sequentialResponse: boolean);
    /**
     * Choose the route response depending on the first fulfilled rule.
     * If no rule has been fulfilled get the first route response.
     */
    chooseResponse(requestNumber: number): RouteResponse;
    /**
     * Check if a rule is valid by comparing the value extracted from the target to the rule value
     */
    private isValidRule;
    /**
     * Extract rules targets from the request (body, headers, etc)
     */
    private extractTargets;
}
